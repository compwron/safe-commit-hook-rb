Mutant configuration:
Matcher:         #<Mutant::Matcher::Config match_expressions: [SafeCommitHook]>
Integration:     Mutant::Integration::Rspec
Jobs:            8
Includes:        ["lib"]
Requires:        []
(00/932) 100% - killtime: 0.00s runtime: 0.00s overhead: 0.00s
(00/932) 100% - killtime: 0.00s runtime: 0.00s overhead: 0.00s
(31/932)  96% - killtime: 4.06s runtime: 1.01s overhead: -3.05s
(71/932)  97% - killtime: 8.62s runtime: 2.02s overhead: -6.60s
(108/932)  98% - killtime: 13.18s runtime: 3.02s overhead: -10.16s
(147/932)  98% - killtime: 17.99s runtime: 4.03s overhead: -13.96s
(180/932)  97% - killtime: 22.99s runtime: 5.04s overhead: -17.95s
(215/932)  98% - killtime: 27.84s runtime: 6.05s overhead: -21.80s
(249/932)  98% - killtime: 32.34s runtime: 7.06s overhead: -25.29s
(277/932)  98% - killtime: 36.19s runtime: 8.06s overhead: -28.13s
(312/932)  98% - killtime: 41.55s runtime: 9.08s overhead: -32.47s
(333/932)  98% - killtime: 46.10s runtime: 10.09s overhead: -36.01s
(361/932)  98% - killtime: 51.37s runtime: 11.10s overhead: -40.27s
(380/932)  98% - killtime: 55.94s runtime: 12.10s overhead: -43.84s
(403/932)  98% - killtime: 60.79s runtime: 13.11s overhead: -47.68s
(430/932)  98% - killtime: 65.63s runtime: 14.13s overhead: -51.50s
(457/932)  98% - killtime: 70.45s runtime: 15.13s overhead: -55.32s
(484/932)  98% - killtime: 74.26s runtime: 16.14s overhead: -58.13s
(516/932)  98% - killtime: 78.33s runtime: 17.14s overhead: -61.19s
(535/932)  98% - killtime: 81.48s runtime: 18.15s overhead: -63.33s
(559/932)  98% - killtime: 86.63s runtime: 19.15s overhead: -67.47s
(584/932)  98% - killtime: 91.21s runtime: 20.16s overhead: -71.05s
(611/932)  98% - killtime: 95.30s runtime: 21.16s overhead: -74.14s
(638/932)  98% - killtime: 99.46s runtime: 22.17s overhead: -77.29s
(663/932)  98% - killtime: 103.20s runtime: 23.17s overhead: -80.03s
(684/932)  98% - killtime: 107.33s runtime: 24.17s overhead: -83.16s
(712/932)  98% - killtime: 111.03s runtime: 25.18s overhead: -85.85s
(741/932)  98% - killtime: 115.14s runtime: 26.18s overhead: -88.95s
(770/932)  98% - killtime: 118.63s runtime: 27.19s overhead: -91.44s
(804/932)  98% - killtime: 123.13s runtime: 28.19s overhead: -94.93s
(826/932)  98% - killtime: 126.64s runtime: 29.20s overhead: -97.44s
(857/932)  98% - killtime: 131.37s runtime: 30.20s overhead: -101.16s
(881/932)  98% - killtime: 134.54s runtime: 31.23s overhead: -103.31s
(915/932)  98% - killtime: 139.11s runtime: 32.24s overhead: -106.88s
(916/932)  98% - killtime: 139.21s runtime: 33.24s overhead: -105.98s
SafeCommitHook#add_errors:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:82
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#add_errors:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:82:62511
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :add_errors,
  s(:args,
    s(:arg, :cp),
    s(:arg, :filepath),
    s(:arg, :commit_hash)),
  s(:send,
    s(:ivar, :@errors), :<<,
    s(:dstr,
      s(:begin,
        s(:send,
          s(:lvar, :cp), :[],
          s(:str, "caption"))),
      s(:str, " in commit "),
      s(:begin,
        s(:lvar, :commit_hash)),
      s(:str, " in file "),
      s(:begin,
        s(:lvar, :filepath)))))
Unparsed Source:
def add_errors(cp, filepath, commit_hash)
  @errors << "#{cp["caption"]}#{" in commit "}#{commit_hash}#{" in file "}#{filepath}"
end
Test Result:
- 15 @ runtime: 0.186379
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
.F

Failures:

  1) SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: FileUtils.mkdir(repo)

          Errno::EEXIST:
            File exists @ dir_s_mkdir - fake_git
          # ./spec/safe_commit_hook_spec.rb:18:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          TypeError:
            no implicit conversion of nil into String
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.10372 seconds (files took 0.46301 seconds to load)
2 examples, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:78 # SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
-----------------------
SafeCommitHook#basenames:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:107
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#basenames:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:107:f1bc6
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :basenames,
  s(:args,
    s(:arg, :files),
    s(:arg, :whitelist)),
  s(:block,
    s(:send,
      s(:block,
        s(:send,
          s(:lvar, :files), :inject,
          s(:hash)),
        s(:args,
          s(:arg, :aggregator),
          s(:arg, :filename)),
        s(:begin,
          s(:send,
            s(:lvar, :aggregator), :[]=,
            s(:lvar, :filename),
            s(:send,
              s(:const, nil, :File), :basename,
              s(:lvar, :filename))),
          s(:lvar, :aggregator))), :reject),
    s(:args,
      s(:arg, :filepath),
      s(:arg, :_)),
    s(:or,
      s(:send, nil, :is_git_file?,
        s(:lvar, :filepath)),
      s(:send,
        s(:lvar, :whitelist), :include?,
        s(:lvar, :filepath)))))
Unparsed Source:
def basenames(files, whitelist)
  files.inject({}) do |aggregator, filename|
    aggregator[filename] = File.basename(filename)
    aggregator
  end.reject do |filepath, _|
    is_git_file?(filepath) || whitelist.include?(filepath)
  end
end
Test Result:
- 15 @ runtime: 0.08829
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
F

Failures:

  1) SafeCommitHook when there are no bad files outputs reassuring informational message
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: @g = Git.init(@repo_full_path)

          Git::GitExecuteError:
            git '--git-dir=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/5d47aa9b-c5b5-4098-9d1d-7f3d6eb97cf0/.git' '--work-tree=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/5d47aa9b-c5b5-4098-9d1d-7f3d6eb97cf0' init   2>&1:fatal: Cannot access work tree '/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/5d47aa9b-c5b5-4098-9d1d-7f3d6eb97cf0': No such file or directory
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:937:in `command'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:40:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/base.rb:67:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git.rb:140:in `init'
          # ./spec/safe_commit_hook_spec.rb:20:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          Errno::ENOENT:
            No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/5d47aa9b-c5b5-4098-9d1d-7f3d6eb97cf0
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.02325 seconds (files took 1.47 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:66 # SafeCommitHook when there are no bad files outputs reassuring informational message
-----------------------
SafeCommitHook#check:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:19
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#check:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:19:8f0e4
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :check,
  s(:args,
    s(:arg, :check_all_commits),
    s(:arg, :check_patterns),
    s(:arg, :repo_full_path),
    s(:arg, :whitelist)),
  s(:begin,
    s(:if,
      s(:lvar, :check_all_commits),
      s(:send, nil, :check_all_commits,
        s(:lvar, :check_patterns),
        s(:lvar, :repo_full_path),
        s(:lvar, :whitelist)), nil),
    s(:send, nil, :check_files,
      s(:lvar, :check_patterns),
      s(:send, nil, :staged_file_basenames,
        s(:lvar, :repo_full_path),
        s(:lvar, :whitelist)),
      s(:str, "currently staged files"))))
Unparsed Source:
def check(check_all_commits, check_patterns, repo_full_path, whitelist)
  if check_all_commits
    check_all_commits(check_patterns, repo_full_path, whitelist)
  end
  check_files(check_patterns, staged_file_basenames(repo_full_path, whitelist), "currently staged files")
end
Test Result:
- 15 @ runtime: 0.230613
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
.F

Failures:

  1) SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: @g = Git.init(@repo_full_path)

          Git::GitExecuteError:
            git '--git-dir=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/15b28f2a-7f19-47c5-b73f-a7ae8f3aaddc/.git' '--work-tree=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/15b28f2a-7f19-47c5-b73f-a7ae8f3aaddc' init   2>&1:/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/15b28f2a-7f19-47c5-b73f-a7ae8f3aaddc/.git/refs: No such file or directory
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:937:in `command'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:40:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/base.rb:67:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git.rb:140:in `init'
          # ./spec/safe_commit_hook_spec.rb:20:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          Errno::ENOENT:
            No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/15b28f2a-7f19-47c5-b73f-a7ae8f3aaddc
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.11474 seconds (files took 3.24 seconds to load)
2 examples, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:78 # SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
-----------------------
SafeCommitHook#check_all_commits:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:26
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#check_all_commits:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:26:e2d0d
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :check_all_commits,
  s(:args,
    s(:arg, :check_patterns),
    s(:arg, :repo_full_path),
    s(:arg, :whitelist)),
  s(:begin,
    s(:lvasgn, :commit_hashes,
      s(:send,
        s(:xstr,
          s(:str, "cd "),
          s(:begin,
            s(:lvar, :repo_full_path)),
          s(:str, " && git log --pretty=format:%h 2>/dev/null")), :split)),
    s(:block,
      s(:send,
        s(:lvar, :commit_hashes), :each),
      s(:args,
        s(:arg, :commit_hash)),
      s(:begin,
        s(:lvasgn, :files,
          s(:send,
            s(:xstr,
              s(:str, "cd "),
              s(:begin,
                s(:lvar, :repo_full_path)),
              s(:str, " && git show --pretty=\"\" --name-only -r "),
              s(:begin,
                s(:lvar, :commit_hash))), :split)),
        s(:send, nil, :check_files,
          s(:lvar, :check_patterns),
          s(:send, nil, :basenames,
            s(:lvar, :files),
            s(:lvar, :whitelist)),
          s(:lvar, :commit_hash))))))
Unparsed Source:
def check_all_commits(check_patterns, repo_full_path, whitelist)
  commit_hashes = `#{"cd "}#{repo_full_path}#{" && git log --pretty=format:%h 2>/dev/null"}`.split
  commit_hashes.each do |commit_hash|
    files = `#{"cd "}#{repo_full_path}#{" && git show --pretty=\"\" --name-only -r "}#{commit_hash}`.split
    check_files(check_patterns, basenames(files, whitelist), commit_hash)
  end
end
Test Result:
- 15 @ runtime: 0.133462
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
F

Failures:

  1) SafeCommitHook when there are no bad files outputs reassuring informational message
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: @g = Git.init(@repo_full_path)

          Git::GitExecuteError:
            git '--git-dir=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/b722f29a-57fa-447b-b9d5-ae42c879d859/.git' '--work-tree=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/b722f29a-57fa-447b-b9d5-ae42c879d859' init   2>&1:fatal: Cannot access work tree '/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/b722f29a-57fa-447b-b9d5-ae42c879d859': No such file or directory
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:937:in `command'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:40:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/base.rb:67:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git.rb:140:in `init'
          # ./spec/safe_commit_hook_spec.rb:20:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          Errno::ENOENT:
            No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/b722f29a-57fa-447b-b9d5-ae42c879d859
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.01608 seconds (files took 4.72 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:66 # SafeCommitHook when there are no bad files outputs reassuring informational message
-----------------------
SafeCommitHook#check_extension_pattern:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:62
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#check_extension_pattern:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:62:bc7c9
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :check_extension_pattern,
  s(:args,
    s(:arg, :check_pattern),
    s(:arg, :commit_hash),
    s(:arg, :file_basenames)),
  s(:block,
    s(:send,
      s(:lvar, :file_basenames), :each),
    s(:args,
      s(:arg, :filepath),
      s(:arg, :basename)),
    s(:if,
      s(:send,
        s(:send,
          s(:send,
            s(:const, nil, :File), :extname,
            s(:lvar, :basename)), :gsub,
          s(:str, "."),
          s(:str, "")), :==,
        s(:send,
          s(:lvar, :check_pattern), :[],
          s(:str, "pattern"))),
      s(:send, nil, :add_errors,
        s(:lvar, :check_pattern),
        s(:lvar, :filepath),
        s(:lvar, :commit_hash)), nil)))
Unparsed Source:
def check_extension_pattern(check_pattern, commit_hash, file_basenames)
  file_basenames.each do |filepath, basename|
    if (File.extname(basename).gsub(".", "") == check_pattern["pattern"])
      add_errors(check_pattern, filepath, commit_hash)
    end
  end
end
Test Result:
- 15 @ runtime: 0.166292
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
F

Failures:

  1) SafeCommitHook when there are no bad files outputs reassuring informational message
     Failure/Error: FileUtils.rm_r(@repo_full_path)

     Errno::ENOENT:
       No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/de470019-3a1e-424d-8857-ef8aeec29674
     # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.09174 seconds (files took 6.74 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:66 # SafeCommitHook when there are no bad files outputs reassuring informational message
-----------------------
SafeCommitHook#check_filename_pattern:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:70
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#check_filename_pattern:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:70:4e76a
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :check_filename_pattern,
  s(:args,
    s(:arg, :check_pattern),
    s(:arg, :commit_hash),
    s(:arg, :file_basenames)),
  s(:block,
    s(:send,
      s(:lvar, :file_basenames), :each),
    s(:args,
      s(:arg, :filepath),
      s(:arg, :basename)),
    s(:if,
      s(:send, nil, :found_match,
        s(:send,
          s(:lvar, :basename), :=~,
          s(:send,
            s(:const, nil, :Regexp), :new,
            s(:send,
              s(:lvar, :check_pattern), :[],
              s(:str, "pattern"))))),
      s(:send, nil, :add_errors,
        s(:lvar, :check_pattern),
        s(:lvar, :filepath),
        s(:lvar, :commit_hash)), nil)))
Unparsed Source:
def check_filename_pattern(check_pattern, commit_hash, file_basenames)
  file_basenames.each do |filepath, basename|
    if found_match(basename =~ Regexp.new(check_pattern["pattern"]))
      add_errors(check_pattern, filepath, commit_hash)
    end
  end
end
Test Result:
- 15 @ runtime: 0.110908
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
F

Failures:

  1) SafeCommitHook when there are no bad files outputs reassuring informational message
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: FileUtils.rm_r(repo) if Dir.exists?(repo)

          Errno::ENOTEMPTY:
            Directory not empty @ dir_s_rmdir - fake_git
          # ./spec/safe_commit_hook_spec.rb:17:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'
          # ------------------
          # --- Caused by: ---
          # Errno::ENOTEMPTY:
          #   Directory not empty @ dir_s_rmdir - fake_git/7f815084-b351-404d-b90f-6d96c0fddd48/.git
          #   ./spec/safe_commit_hook_spec.rb:17:in `block (2 levels) in <top (required)>'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          TypeError:
            no implicit conversion of nil into String
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.00565 seconds (files took 9.07 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:66 # SafeCommitHook when there are no bad files outputs reassuring informational message
-----------------------
SafeCommitHook#check_files:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:34
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#check_files:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:34:f09d2
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :check_files,
  s(:args,
    s(:arg, :check_patterns),
    s(:arg, :file_basenames),
    s(:arg, :commit_hash)),
  s(:block,
    s(:send,
      s(:lvar, :check_patterns), :each),
    s(:args,
      s(:arg, :check_pattern)),
    s(:case,
      s(:send,
        s(:lvar, :check_pattern), :[],
        s(:str, "part")),
      s(:when,
        s(:str, "filename"),
        s(:send, nil, :check_filename_pattern,
          s(:lvar, :check_pattern),
          s(:lvar, :commit_hash),
          s(:lvar, :file_basenames))),
      s(:when,
        s(:str, "extension"),
        s(:send, nil, :check_extension_pattern,
          s(:lvar, :check_pattern),
          s(:lvar, :commit_hash),
          s(:lvar, :file_basenames))),
      s(:when,
        s(:str, "path"),
        s(:send, nil, :check_path_pattern,
          s(:lvar, :check_pattern),
          s(:lvar, :commit_hash),
          s(:lvar, :file_basenames))),
      s(:send, nil, :p,
        s(:dstr,
          s(:str, "invalid part of check pattern: "),
          s(:begin,
            s(:lvar, :check_pattern)))))))
Unparsed Source:
def check_files(check_patterns, file_basenames, commit_hash)
  check_patterns.each do |check_pattern|
    case check_pattern["part"]
    when "filename"
      check_filename_pattern(check_pattern, commit_hash, file_basenames)
    when "extension"
      check_extension_pattern(check_pattern, commit_hash, file_basenames)
    when "path"
      check_path_pattern(check_pattern, commit_hash, file_basenames)
    else
      p("#{"invalid part of check pattern: "}#{check_pattern}")
    end
  end
end
Test Result:
- 15 @ runtime: 0.246778
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
F

Failures:

  1) SafeCommitHook when there are no bad files outputs reassuring informational message
     Failure/Error: FileUtils.rm_r(@repo_full_path)

     Errno::ENOENT:
       No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/d3c692c7-4243-45fd-9ce5-f5f0ad9f45d0
     # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.1011 seconds (files took 11.87 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:66 # SafeCommitHook when there are no bad files outputs reassuring informational message
-----------------------
SafeCommitHook#check_path_pattern:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:49
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#check_path_pattern:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:49:f8989
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :check_path_pattern,
  s(:args,
    s(:arg, :check_pattern),
    s(:arg, :commit_hash),
    s(:arg, :file_basenames)),
  s(:block,
    s(:send,
      s(:lvar, :file_basenames), :each),
    s(:args,
      s(:arg, :filepath),
      s(:arg, :_)),
    s(:begin,
      s(:lvasgn, :escaped_pattern,
        s(:send,
          s(:send,
            s(:lvar, :check_pattern), :[],
            s(:str, "pattern")), :gsub,
          s(:str, "\\"),
          s(:str, "\\\\"))),
      s(:if,
        s(:send, nil, :found_match,
          s(:send,
            s(:send,
              s(:const, nil, :File), :dirname,
              s(:lvar, :filepath)), :=~,
            s(:send,
              s(:const, nil, :Regexp), :new,
              s(:lvar, :escaped_pattern)))),
        s(:send, nil, :add_errors,
          s(:lvar, :check_pattern),
          s(:lvar, :filepath),
          s(:lvar, :commit_hash)), nil))))
Unparsed Source:
def check_path_pattern(check_pattern, commit_hash, file_basenames)
  file_basenames.each do |filepath, _|
    escaped_pattern = check_pattern["pattern"].gsub("\\", "\\\\")
    if found_match(File.dirname(filepath) =~ Regexp.new(escaped_pattern))
      add_errors(check_pattern, filepath, commit_hash)
    end
  end
end
Test Result:
- 15 @ runtime: 0.133803
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
F

Failures:

  1) SafeCommitHook when there are no bad files outputs reassuring informational message
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: @g.config('user.name', 'safe-commit-hook-rb')

          Git::GitExecuteError:
            git '--git-dir=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/2546f33a-ecb3-4a5b-a6d8-c79ed20aa0a3/.git' '--work-tree=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/2546f33a-ecb3-4a5b-a6d8-c79ed20aa0a3' config 'user.name' 'safe-commit-hook-rb'  2>&1:fatal: not in a git directory
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:937:in `command'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:499:in `config_set'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/base.rb:117:in `config'
          # ./spec/safe_commit_hook_spec.rb:21:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          Errno::ENOENT:
            No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/2546f33a-ecb3-4a5b-a6d8-c79ed20aa0a3
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.05007 seconds (files took 15.39 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:66 # SafeCommitHook when there are no bad files outputs reassuring informational message
-----------------------
SafeCommitHook#check_patterns:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:78
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#check_patterns:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:78:b2f77
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :check_patterns,
  s(:args,
    s(:arg, :check_patterns_file)),
  s(:send,
    s(:const, nil, :JSON), :parse,
    s(:send,
      s(:const, nil, :File), :read,
      s(:lvar, :check_patterns_file))))
Unparsed Source:
def check_patterns(check_patterns_file)
  JSON.parse(File.read(check_patterns_file))
end
Test Result:
- 15 @ runtime: 0.119225
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
F

Failures:

  1) SafeCommitHook when there are no bad files outputs reassuring informational message
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: @g = Git.init(@repo_full_path)

          Git::GitExecuteError:
            git '--git-dir=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/b98812f1-ddfd-4499-8873-bf684a0599fc/.git' '--work-tree=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/b98812f1-ddfd-4499-8873-bf684a0599fc' init   2>&1:fatal: Cannot access work tree '/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/b98812f1-ddfd-4499-8873-bf684a0599fc': No such file or directory
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:937:in `command'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:40:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/base.rb:67:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git.rb:140:in `init'
          # ./spec/safe_commit_hook_spec.rb:20:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          Errno::ENOENT:
            No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/b98812f1-ddfd-4499-8873-bf684a0599fc
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.02588 seconds (files took 18.65 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:66 # SafeCommitHook when there are no bad files outputs reassuring informational message
-----------------------
SafeCommitHook#found_match:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:58
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#found_match:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:58:55b11
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :found_match,
  s(:args,
    s(:arg, :match_result)),
  s(:send,
    s(:lvar, :match_result), :==,
    s(:int, 0)))
Unparsed Source:
def found_match(match_result)
  match_result == 0
end
Test Result:
- 15 @ runtime: 0.186203
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
.F

Failures:

  1) SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: FileUtils.rm_r(repo) if Dir.exists?(repo)

          Errno::ENOENT:
            No such file or directory @ dir_s_rmdir - fake_git/37508d83-ca38-4c24-a1ab-67d4a375191f
          # ./spec/safe_commit_hook_spec.rb:17:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'
          # ------------------
          # --- Caused by: ---
          # Errno::ENOENT:
          #   No such file or directory @ unlink_internal - fake_git/37508d83-ca38-4c24-a1ab-67d4a375191f/.git
          #   ./spec/safe_commit_hook_spec.rb:17:in `block (2 levels) in <top (required)>'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          TypeError:
            no implicit conversion of nil into String
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.10522 seconds (files took 19.4 seconds to load)
2 examples, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:78 # SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
-----------------------
SafeCommitHook#initialize:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:7
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#initialize:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:7:04667
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :initialize,
  s(:args,
    s(:arg, :stdout)),
  s(:begin,
    s(:gvasgn, :$stdout,
      s(:lvar, :stdout)),
    s(:ivasgn, :@errors,
      s(:array))))
Unparsed Source:
def initialize(stdout)
  $stdout = stdout
  @errors = []
end
Test Result:
- 15 @ runtime: 0.114213
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
F

Failures:

  1) SafeCommitHook when there are no bad files outputs reassuring informational message
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: @g = Git.init(@repo_full_path)

          Git::GitExecuteError:
            git '--git-dir=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/a295a991-7f93-4d8c-835f-18c2f52003e6/.git' '--work-tree=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/a295a991-7f93-4d8c-835f-18c2f52003e6' init   2>&1:fatal: Cannot access work tree '/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/a295a991-7f93-4d8c-835f-18c2f52003e6': No such file or directory
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:937:in `command'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:40:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/base.rb:67:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git.rb:140:in `init'
          # ./spec/safe_commit_hook_spec.rb:20:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          Errno::ENOENT:
            No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/a295a991-7f93-4d8c-835f-18c2f52003e6
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.02144 seconds (files took 20.23 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:66 # SafeCommitHook when there are no bad files outputs reassuring informational message
-----------------------
SafeCommitHook#is_git_file?:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:116
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#is_git_file?:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:116:04b8d
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :is_git_file?,
  s(:args,
    s(:arg, :filepath)),
  s(:send,
    s(:send,
      s(:send,
        s(:lvar, :filepath), :split,
        s(:str, "/")), :[],
      s(:int, 0)), :==,
    s(:str, ".git")))
Unparsed Source:
def is_git_file?(filepath)
  filepath.split("/")[0] == ".git"
end
Test Result:
- 15 @ runtime: 0.276606
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
.F

Failures:

  1) SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: @g = Git.init(@repo_full_path)

          Git::GitExecuteError:
            git '--git-dir=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/3a54e226-2a7a-494d-b484-fd7d5a55607f/.git' '--work-tree=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/3a54e226-2a7a-494d-b484-fd7d5a55607f' init   2>&1:error: invalid config file /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/3a54e226-2a7a-494d-b484-fd7d5a55607f/.git/config
            fatal: could not set 'core.filemode' to 'true'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:937:in `command'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:40:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/base.rb:67:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git.rb:140:in `init'
          # ./spec/safe_commit_hook_spec.rb:20:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          Errno::ENOENT:
            No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/3a54e226-2a7a-494d-b484-fd7d5a55607f
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.17336 seconds (files took 20.84 seconds to load)
2 examples, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:78 # SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
-----------------------
SafeCommitHook#print_errors_and_exit:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:86
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#print_errors_and_exit:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:86:d3dab
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :print_errors_and_exit,
  s(:args),
  s(:if,
    s(:send,
      s(:send,
        s(:ivar, :@errors), :size), :>,
      s(:int, 0)),
    s(:begin,
      s(:lvasgn, :start_red,
        s(:str, "\e[31m")),
      s(:lvasgn, :end_color,
        s(:str, "\e[0m")),
      s(:send, nil, :puts,
        s(:lvar, :start_red)),
      s(:send, nil, :puts,
        s(:str, "[ERROR] Unable to complete git commit.")),
      s(:send, nil, :puts,
        s(:str, "See .git/hooks/pre-commit or https://github.com/compwron/safe-commit-hook-rb for details")),
      s(:send, nil, :puts,
        s(:str, "Add full filepath to .ignored_security_risks to ignore")),
      s(:send, nil, :puts,
        s(:ivar, :@errors)),
      s(:send, nil, :puts,
        s(:lvar, :end_color)),
      s(:send, nil, :exit,
        s(:int, 1))),
    s(:send, nil, :print,
      s(:dstr,
        s(:str, "safe-commit-hook check looks clean. See ignored files in "),
        s(:begin,
          s(:const, nil, :WHITELIST_NAME))))))
Unparsed Source:
def print_errors_and_exit
  if (@errors.size > 0)
    start_red = "\e[31m"
    end_color = "\e[0m"
    puts(start_red)
    puts("[ERROR] Unable to complete git commit.")
    puts("See .git/hooks/pre-commit or https://github.com/compwron/safe-commit-hook-rb for details")
    puts("Add full filepath to .ignored_security_risks to ignore")
    puts(@errors)
    puts(end_color)
    exit(1)
  else
    print("#{"safe-commit-hook check looks clean. See ignored files in "}#{WHITELIST_NAME}")
  end
end
Test Result:
- 15 @ runtime: 0.116993
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
F

Failures:

  1) SafeCommitHook when there are no bad files outputs reassuring informational message
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: @g = Git.init(@repo_full_path)

          Git::GitExecuteError:
            git '--git-dir=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/12b254d0-dd15-4147-aec6-c74254477f87/.git' '--work-tree=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/12b254d0-dd15-4147-aec6-c74254477f87' init   2>&1:fatal: Cannot access work tree '/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/12b254d0-dd15-4147-aec6-c74254477f87': No such file or directory
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:937:in `command'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:40:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/base.rb:67:in `init'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git.rb:140:in `init'
          # ./spec/safe_commit_hook_spec.rb:20:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          Errno::ENOENT:
            No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/12b254d0-dd15-4147-aec6-c74254477f87
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.03014 seconds (files took 22.15 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:66 # SafeCommitHook when there are no bad files outputs reassuring informational message
-----------------------
SafeCommitHook#run:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:12
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#run:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:12:a1789
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :run,
  s(:args,
    s(:arg, :repo_full_path),
    s(:arg, :check_all_commits),
    s(:arg, :check_patterns_file)),
  s(:begin,
    s(:send, nil, :check,
      s(:lvar, :check_all_commits),
      s(:send, nil, :check_patterns,
        s(:lvar, :check_patterns_file)),
      s(:lvar, :repo_full_path),
      s(:send, nil, :whitelisted_files)),
    s(:send, nil, :print_errors_and_exit)))
Unparsed Source:
def run(repo_full_path, check_all_commits, check_patterns_file)
  check(check_all_commits, check_patterns(check_patterns_file), repo_full_path, whitelisted_files)
  print_errors_and_exit
end
Test Result:
- 15 @ runtime: 0.222136
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
.F

Failures:

  1) SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: @g.config('user.name', 'safe-commit-hook-rb')

          Git::GitExecuteError:
            git '--git-dir=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/2d23794e-ecb0-4b4f-9daa-c2552da86053/.git' '--work-tree=/Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/2d23794e-ecb0-4b4f-9daa-c2552da86053' config 'user.name' 'safe-commit-hook-rb'  2>&1:fatal: not in a git directory
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:937:in `command'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/lib.rb:499:in `config_set'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/git-1.3.0/lib/git/base.rb:117:in `config'
          # ./spec/safe_commit_hook_spec.rb:21:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

     1.2) Failure/Error: FileUtils.rm_r(@repo_full_path)

          Errno::ENOENT:
            No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/2d23794e-ecb0-4b4f-9daa-c2552da86053
          # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
          # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.14444 seconds (files took 26.2 seconds to load)
2 examples, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:78 # SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
-----------------------
SafeCommitHook#staged_file_basenames:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:102
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#staged_file_basenames:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:102:9cc53
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :staged_file_basenames,
  s(:args,
    s(:arg, :repo_full_path),
    s(:arg, :whitelist)),
  s(:begin,
    s(:lvasgn, :files,
      s(:send,
        s(:xstr,
          s(:str, "cd "),
          s(:begin,
            s(:lvar, :repo_full_path)),
          s(:str, " && git diff --name-only --cached")), :split,
        s(:str, "\n"))),
    s(:send, nil, :basenames,
      s(:lvar, :files),
      s(:lvar, :whitelist))))
Unparsed Source:
def staged_file_basenames(repo_full_path, whitelist)
  files = `#{"cd "}#{repo_full_path}#{" && git diff --name-only --cached"}`.split("\n")
  basenames(files, whitelist)
end
Test Result:
- 15 @ runtime: 0.153368
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
F

Failures:

  1) SafeCommitHook when there are no bad files outputs reassuring informational message
     Failure/Error: FileUtils.rm_r(@repo_full_path)

     Errno::ENOENT:
       No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/880c1ae1-d6e3-44fd-8104-7defb66f0ae0
     # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.08352 seconds (files took 27.23 seconds to load)
1 example, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:66 # SafeCommitHook when there are no bad files outputs reassuring informational message
-----------------------
SafeCommitHook#whitelisted_files:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:120
- rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
- rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
- rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
- rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
- rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
- rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
- rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
- rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
- rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
- rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
- rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
- rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
- rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
- rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
- rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
neutral:SafeCommitHook#whitelisted_files:/Users/lgoldste/repositories/safe-commit-hook-rb/lib/safe_commit_hook.rb:120:33f5a
--- Neutral failure ---
Original code was inserted unmutated. And the test did NOT PASS.
Your tests do not pass initially or you found a bug in mutant / unparser.
Subject AST:
s(:def, :whitelisted_files,
  s(:args),
  s(:begin,
    s(:lvasgn, :whitelists,
      s(:block,
        s(:send,
          s(:send,
            s(:const, nil, :Dir), :glob,
            s(:str, "**/*"),
            s(:const,
              s(:const, nil, :File), :FNM_DOTMATCH)), :select),
        s(:args,
          s(:arg, :f)),
        s(:send,
          s(:lvar, :f), :include?,
          s(:const, nil, :WHITELIST_NAME)))),
    s(:lvasgn, :files,
      s(:array)),
    s(:if,
      s(:send,
        s(:lvar, :whitelists), :==,
        s(:array)),
      s(:begin,
        s(:send,
          s(:const, nil, :File), :new,
          s(:const, nil, :WHITELIST_NAME),
          s(:str, "w")),
        s(:send,
          s(:lvar, :whitelists), :<<,
          s(:const, nil, :WHITELIST_NAME))), nil),
    s(:block,
      s(:send,
        s(:lvar, :whitelists), :each),
      s(:args,
        s(:arg, :w)),
      s(:send,
        s(:lvar, :files), :<<,
        s(:send,
          s(:send,
            s(:const, nil, :IO), :readlines,
            s(:lvar, :w)), :map,
          s(:block_pass,
            s(:sym, :strip))))),
    s(:send,
      s(:lvar, :files), :flatten)))
Unparsed Source:
def whitelisted_files
  whitelists = Dir.glob("**/*", File::FNM_DOTMATCH).select do |f|
    f.include?(WHITELIST_NAME)
  end
  files = []
  if (whitelists == [])
    File.new(WHITELIST_NAME, "w")
    whitelists << WHITELIST_NAME
  end
  whitelists.each do |w|
    files << IO.readlines(w).map(&:strip)
  end
  files.flatten
end
Test Result:
- 15 @ runtime: 0.333867
  - rspec:0:./spec/safe_commit_hook_spec.rb:66/SafeCommitHook when there are no bad files outputs reassuring informational message
  - rspec:1:./spec/safe_commit_hook_spec.rb:78/SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
  - rspec:2:./spec/safe_commit_hook_spec.rb:82/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and is still present
  - rspec:3:./spec/safe_commit_hook_spec.rb:94/SafeCommitHook check every commit in history, even if the checked in files are gone now sees file that has been committed and removed
  - rspec:4:./spec/safe_commit_hook_spec.rb:109/SafeCommitHook with no committed passwords detects no false positives
  - rspec:5:./spec/safe_commit_hook_spec.rb:116/SafeCommitHook with missing whitelist does not error when whitelist is missing
  - rspec:6:./spec/safe_commit_hook_spec.rb:126/SafeCommitHook with check patterns including filename rsa with filename including rsa returns with exit 1 and prints error
  - rspec:7:./spec/safe_commit_hook_spec.rb:143/SafeCommitHook with regex check pattern for all filenames checks only files that are currently staged
  - rspec:8:./spec/safe_commit_hook_spec.rb:154/SafeCommitHook with regex check pattern for all filenames detects file with a name that matches the regex
  - rspec:9:./spec/safe_commit_hook_spec.rb:166/SafeCommitHook with regex check pattern for all filenames accepts whitelisting
  - rspec:10:./spec/safe_commit_hook_spec.rb:177/SafeCommitHook with regex check pattern for all filenames always ignores .git
  - rspec:11:./spec/safe_commit_hook_spec.rb:188/SafeCommitHook with extensions check pattern detects file with bad file ending
  - rspec:12:./spec/safe_commit_hook_spec.rb:200/SafeCommitHook with extensions check pattern does not detect file with file ending in its name but not actually a bad file ending
  - rspec:13:./spec/safe_commit_hook_spec.rb:209/SafeCommitHook with path check pattern does not falsely detect
  - rspec:14:./spec/safe_commit_hook_spec.rb:215/SafeCommitHook with path check pattern with bad path detects bad path
Test Output:
.F

Failures:

  1) SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
     Failure/Error: FileUtils.rm_r(@repo_full_path)

     Errno::ENOENT:
       No such file or directory @ unlink_internal - /Users/lgoldste/repositories/safe-commit-hook-rb/fake_git/a4dd3de4-6f97-4562-8816-a9789819b8d8
     # ./spec/safe_commit_hook_spec.rb:26:in `block (2 levels) in <top (required)>'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-rspec-0.8.11/lib/mutant/integration/rspec.rb:63:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:48:in `block in run_mutation_tests'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:66:in `block in result'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `open'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant.rb:223:in `block in <class:Config>'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:63:in `result'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:55:in `child'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:37:in `block in parent'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `fork'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:36:in `parent'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:23:in `block in call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `pipe'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/isolation/fork.rb:22:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:46:in `run_mutation_tests'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/env.rb:25:in `kill'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `call'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:60:in `handle_job'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:45:in `handle'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:31:in `run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/worker.rb:17:in `run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/parallel/master.rb:43:in `block (2 levels) in run'
     # /Users/lgoldste/.rvm/gems/ruby-2.3.1@safe-commit-hook/gems/mutant-0.8.12/lib/mutant/actor/env.rb:14:in `block in spawn'

Finished in 0.17967 seconds (files took 28.39 seconds to load)
2 examples, 1 failure

Failed examples:

rspec ./spec/safe_commit_hook_spec.rb:78 # SafeCommitHook check every commit in history, even if the checked in files are gone now does not see file that has never been committed
-----------------------
Mutant configuration:
Matcher:         #<Mutant::Matcher::Config match_expressions: [SafeCommitHook]>
Integration:     Mutant::Integration::Rspec
Jobs:            8
Includes:        ["lib"]
Requires:        []
Subjects:        16
Mutations:       932
Results:         932
Kills:           916
Alive:           16
Runtime:         33.24s
Killtime:        139.21s
Overhead:        -76.12%
Mutations/s:     28.04
Coverage:        98.28%
Coverage report generated for RSpec to /Users/lgoldste/repositories/safe-commit-hook-rb/coverage. 21 / 80 LOC (26.25%) covered.
